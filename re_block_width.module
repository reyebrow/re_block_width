<?php

/*
 * Extend block's classes with any user defined classes.
 */
function re_block_width_preprocess_block(&$vars) {
  $block = $vars['block'];
  $classes = re_block_width($block);
  
  $region_orient = theme_get_setting('region');
  $region = $vars['elements']['#block']->region;
  $orientation = $region_orient[$region];
  if ($orientation == "h"){
    $vars['classes_array'][] = "columns " . $classes['css_class'];
  }
  if ( isset($classes['css_extra']) && $classes['css_extra'] != ""){
    $vars['classes_array'][] = check_plain($classes['css_extra']);
  }
}


/**
 * Return classes as string
 */
function re_block_width($block) {
  return db_query('SELECT css_class, css_extra FROM {block_width} WHERE module = :module AND delta = :delta', array(':module' => $block->module, ':delta' => $block->delta))->fetchAssoc();
}


/**
 * Alter block edit form
 */
function re_block_width_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'block_admin_configure' || $form_id == 'block_add_block_form') {
    $block->module = $form['module']['#value'];
    $block->delta = $form['delta']['#value'];


    $css_classes = re_block_width($block) ? re_block_width($block) : "";
    kpr($css_classes);
    // Create a more technical description for users with administer blocks permission.
    $description = t('For blocks in horizontal regions we might want to give them a width. Widths based on a grid 12 units wide where \'Twelve\'=100%');

    $form['re_block_width'] = array(
      '#type' => 'fieldset',
      '#title' => t('Foundation Class Width'),
      '#collapsible' => TRUE,
      '#weight' => -1,
      '#description' => $description,
    );
    $form['re_block_width']['css_class'] = array(
      '#type' => 'select',
      '#title' => t('Width'),
      '#default_value' => isset($css_classes['css_class']) ? $css_classes['css_class'] : "",
      '#options' => Array('Choose One' => '', 'twelve'=>'twelve', 'eleven'=>'eleven', 'ten'=>'ten', 'nine'=>'nine', 'eight'=>'eight', 'seven'=>'seven', 'six'=>'six', 'five'=>'five', 'four'=>'four', 'three'=>'three', 'two'=>'two', 'one'=>'one'),
      '#description' => t('This is for horizontal regions only. For vertical regions most cases will require this to be \'twelve\''),
      '#maxlength' => 255,
    );

  $form['re_block_width']['css_extra'] = array(
    '#type' => 'textfield',
    '#default_value' => isset($css_classes['css_extra']) ? $css_classes['css_extra'] : "",
    '#title' => t('Extra Custom Classes'),
    '#maxlength' => 255,
  );
    $form['#submit'][] = 're_block_width_form_submit';
  }
}


/**
 * Save supplied class.
 */
function re_block_width_form_submit($form, &$form_state) {
  if ($form_state['values']['form_id'] == 'block_admin_configure' || $form_state['values']['form_id'] == 'block_add_block_form') {
    if (isset($form_state['values']['css_class']) && user_access('administer blocks')) {
      $module = $form_state['values']['module'];
      $delta = $form_state['values']['delta'];
      $class = $form_state['values']['css_class'];
      $extra = $form_state['values']['css_extra'];
      db_delete('block_width')->condition('module', $module)->condition('delta', $delta)->execute();
      if (!empty($class)) {
        $id = db_insert('block_width')->fields(array('module' => $module, 'delta' => $delta, 'css_class' => $class, 'css_extra' => $extra ))->execute();
      }
    }
  }
}


